name: Laravel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
   name: PHP ${{matrix.php}}, ${{matrix.stability}} deps
   runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [7.0, 7.1, 7.2, 7.3, 7.4,8.0]
        stability: [lowest, stable]
        exclude:
          - stability: lowest
            php: 7.1
          - stability: lowest
            php: 7.2
          - stability: lowest
            php: 7.3
          - stability: lowest
            php: 7.4
          - stability: lowest
            php: 8.0


   services:
      mysql:
        image: mysql:5.7
        ports:
        - 3306:3306
        env:
          MYSQL_DATABASE: laravel
          MYSQL_ROOT_PASSWORD: test
          options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10
   env:
     DB_CONNECTION: mysql
     DB_HOST: 127.0.0.1
     DB_PORT: 3306
     DB_DATABASE: laravel
     DB_USER_NAME: root
     DB_PASSWORD: test

   steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: ${{matrix.php}}
        extensions: mbstring, gd, pdo, pdo_mysql,bcmath,dom, curl, libxml, zip, pcntl, sqlite, pdo_sqlite

    - uses: actions/checkout@v2

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Update Dependencies
      run: composer update

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Build frontend
      run: |
        npm install
        npm run prod

    - name: Install xmllint
      run: sudo apt-get install libxml2-utils

    - name: Show dir
      run: pwd

    - name: PHP Version
      run: php --version

    - name: Run Tests
      run: ./vendor/bin/phpunit

   - name: Execute tests (Unit and Feature tests) via PHPUnit
     env:
      DB_CONNECTION: mysql
      DB_DATABASE: db_test_laravel
      DB_PORT: 33306
      DB_USER: root
     continue-on-error: true
     run: vendor/bin/phpunit --testdox


  lint:
   runs-on: ubuntu-latest
   needs: [build]
   steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: symfonycorp/security-checker-action@v2
    - name: phpinsights
    #  run : vendor/bin/phpinsights
      run : echo phpinsights

    - name: Execute Code Sniffer via phpcs
      continue-on-error: true
      run: |
        composer require --dev squizlabs/php_codesniffer
        vendor/bin/phpcs -n    --standard=PSR12 app

    - name: Run PHPCS ignoring warnings
      continue-on-error: true
      run: vendor/bin/phpcs --runtime-set ignore_warnings_on_exit 1 app

    - name: Execute Code phpinsights
      run: |
        composer require nunomaduro/phpinsights --dev
        vendor/bin/phpinsights



  deploy:
   runs-on: ubuntu-latest
   needs: [build, lint]


   steps:
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Start Build
      run : echo "Start deploy.."

    - name: Upload Deployment Zip
      uses: actions/upload-artifact@v2
      with:
        name: deployment_zip
        path:  ./




  notification:

   runs-on: ubuntu-latest
   needs: [build, lint,deploy]

   steps:
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #  - uses: actions/checkout@v2

    - name:  Slack Notification
      run : echo "Start Notification.."
