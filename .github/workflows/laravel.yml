name: Laravel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
   runs-on: ubuntu-latest

   services:
      mysql:
        image: mysql:5.7
        ports:
        - 3306:3306
        env:
          MYSQL_DATABASE: laravel
          MYSQL_ROOT_PASSWORD: test
          options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10
    env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: laravel
        DB_USER_NAME: root
        DB_PASSWORD: test

   steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '7.4'
        extensions: mbstring, gd, pdo, pdo_mysql

    - uses: actions/checkout@v2


    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Build frontend
      run: npm run prod

    - name: Show dir
      run: pwd

    - name: PHP Version
      run: php --version

  lint:
   runs-on: ubuntu-latest
   needs: [build]
   steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: phpinsights
      run : vendor/bin/phpinsights


  test:
   runs-on: ubuntu-latest
   needs: [build,lint]
   steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Execute tests
      run: vendor/bin/phpunit --verbose



  deploy:
   runs-on: ubuntu-latest
   needs: [build, lint,test]


   steps:
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Start Build
      run : echo "Start deploy.."

    - name: Upload Deployment Zip
      uses: actions/upload-artifact@v2
      with:
        name: deployment_zip
        path:  ./




  notification:

   runs-on: ubuntu-latest
   needs: [build, lint,test,deploy]

   steps:
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #  - uses: actions/checkout@v2

    - name:  Slack Notification
      run : echo "Start Notification.."
